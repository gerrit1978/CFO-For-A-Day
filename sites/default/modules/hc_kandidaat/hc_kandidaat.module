<?php


/**
 * @file
 * Provides functionality for kandidaten
 *
 * This module creates kandidaten node after webform submission
 *
 */


/**
 * Implements hook_webform_submission_insert
 */
function hc_kandidaat_webform_submission_insert($node, $submission) {

	global $language;

	// get mapping component - value
	$mapping = _hc_kandidaat_mapping($node);
	
	// get form values
	$values = $submission->data;
	$sid = $submission->sid;
	
	$voornaam = $values[$mapping['voornaam']]['value'][0];
	$familienaam = $values[$mapping['naam']]['value'][0];
  $description = $values[$mapping['description']]['value'][0];
	$email = $values[$mapping['e_mail']]['value'][0];
	
	if ($avatar_fid = $values[$mapping['avatar']]['value'][0]) {
		$file = file_load($avatar_fid);
	}

	// create "Kandidaat" node
	$e = entity_create("node", array('type' => 'kandidaat'));
	$ew = entity_metadata_wrapper("node", $e);
	
	$ew->title->set($familienaam); // Familienaam = Title
	$ew->field_kandidaat_voornaam->set($voornaam); // Voornaam field
	$ew->field_kandidaat_email->set($email); // Email field	
	$ew->body->value->set($description); // Description = Body
	
	if ($file) {
	  $ew->field_kandidaat_avatar->file->set($file); // Avatar FID;
	}
	
	$ew->field_kandidaat_webform_sid->set($sid); // Webform submission id
	$ew->status->set(0); // Unpublished
	$ew->language->set($language->language); // Language

	// Save the node	
	$ew->save();
}



/**
 * Helper function for mapping webform components
 */
function _hc_kandidaat_mapping($node) {
	
	$mapping = array();
	
	if (!$components = $node->webform['components']) {
	  return;
	}
	
	foreach ($components as $delta => $component) {
	  $cid = $component['cid'];
	  $key = $component['form_key'];
	  $mapping[$key] = $cid;
	}

	return $mapping;	
}